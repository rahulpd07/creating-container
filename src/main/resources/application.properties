server.port=8089
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
# application.properties
server.ipAddress=192.168.0.129
docker.engine.port=2375
docker.engine.ip=192.168.0.129
# application.properties
name.docker.network=niralos-mesh
#vm path name
vm.pathName.configuration=rahul
#core config
docker.n2ip=192.168.0.140
docker.n3ip=192.168.0.141
docker.gatewayip=192.168.0.1
docker.versionof.fivegcore=v-2.2.1_log-fix
docker.version.sdn=2.2.2
#image versions
mysql.version=8.1.0
mongo.version=4.4.2
frontend.version=frontend-test
backend.version=backend-test
fiveG.version=fiveG-test
#global controller 
global.controller.ip=192.168.0.240
global.controller.port=8084
#Spring JPA
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/updater_agent_db?allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false

#spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
#jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;MODE=MySQL;NON_KEYWORDS=USER
#spring.datasource.url=jdbc:h2:tcp://data/controller_client_internal_details
#spring.datasource.url=jdbc:h2:file:/data/controller_client_internal_details
#FOR LINUX
spring.datasource.url=jdbc:h2:file:/home/rahul/data/updater_agent_db
#FOR DOCKER
#spring.datasource.url=jdbc:h2:file:/internal_details
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
 
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

 




